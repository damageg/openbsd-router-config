#	$OpenBSD: pf.conf,v 1.49 2009/09/17 06:39:03 jmc Exp $
#
# See pf.conf(5) for syntax and examples.
# Remember to set net.inet.ip.forwarding=1 and/or net.inet6.ip6.forwarding=1
# in /etc/sysctl.conf if packets are to be forwarded between interfaces.

# for services that run on this machine and are accessible from
# everywhere, we use <me> to match them

pass synproxy state
table <me> const { self }

# setup QoS queues
altq on aue0 priq bandwidth 700Kb queue { std_out, ssh_out, dns_out, tcp_ack_out, eee_out }
queue std_out     priority 3 priq(default,ecn)
queue eee_out     priority 4 priq(ecn)
queue ssh_out     priority 5
queue dns_out     priority 7
queue tcp_ack_out priority 8

altq on msk0 priq bandwidth 6Mb queue { std_in, ssh_in, dns_in, eee_in }
queue std_in      priority 3 priq(default,ecn))
queue eee_in      priority 4 priq(ecn)
queue ssh_in      priority 5
queue dns_in      priority 6

set skip on lo
match in all scrub (no-df)

block log all
block in quick from urpf-failed

# qos
match on aue0 proto tcp                          queue (std_out,tcp_ack_out)
match on aue0 proto tcp         to   port ssh    queue (std_out,ssh_out)
match on aue0 proto { udp tcp } to   port domain queue dns_out
match out on aue0               from 10.0.0.4    queue (eee_out,tcp_ack_out)
match in on aue0                to   10.0.0.4    queue (eee_out,tcp_ack_out)
match on msk0 proto tcp         to   port ssh    queue ssh_in
match on msk0 proto { udp tcp } to   port domain queue dns_in
match in on msk0                from 10.0.0.4    queue eee_in
match out on msk0               to 10.0.0.4      queue eee_in

# internal traffic on the internal network
pass in  on msk0 from { 10.0.0.0/24 2001:470:1f11:488::/64 }
pass out on msk0 to   { 10.0.0.0/24 2001:470:1f11:488::/64 }

# internal traffic on the VPN
pass in  on tun0 from { 10.0.1.0/24 2001:470:1f11:488::/64 }
pass out on tun0 to   { 10.0.1.0/24 2001:470:1f11:488::/64 }

# allow icmp
pass proto icmp  all keep state
pass proto icmp6 all keep state

# allow ssh to any machine
pass in proto tcp to any port ssh

# dns only allowed to run on me
pass in proto { tcp udp } to <me> port domain

# openvpn only allowed on me
pass in on aue0 proto { tcp udp } to <me> port 1194

# everything is allowed out to teh intarwebs
pass out on aue0
pass out on gif0

# NAT
pass out on aue0 from msk0:network to any nat-to (aue0)
